{
  "_args": [
    [
      "object-emitter@https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
      "/opt/TommyDawson/node_modules/rets/node_modules/auto"
    ]
  ],
  "_from": "https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
  "_id": "object-emitter@0.0.2",
  "_inCache": true,
  "_location": "/rets/auto/object-emitter",
  "_phantomChildren": {
    "colors": "1.1.2",
    "debug": "0.7.2",
    "lodash": "1.3.1"
  },
  "_requested": {
    "name": "object-emitter",
    "raw": "object-emitter@https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
    "rawSpec": "https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/rets/auto"
  ],
  "_resolved": "https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
  "_shasum": "704f1b5e5320bf6539cc5d9315bac4e932d9e05e",
  "_shrinkwrap": null,
  "_spec": "object-emitter@https://registry.npmjs.org/object-emitter/-/object-emitter-0.0.2.tgz",
  "_where": "/opt/TommyDawson/node_modules/rets/node_modules/auto",
  "author": {
    "email": "info@usabilitydynamics.com",
    "name": "Usability Dynamics",
    "url": "http://usabilitydynamics.com"
  },
  "bugs": {
    "url": "https://github.com/UsabilityDynamics/object-emitter/issues"
  },
  "contributors": [
    {
      "name": "Andy Potanin",
      "email": "andy.potanin@usabilitydynamics.com",
      "url": "http://usabilitydynamics.com"
    },
    {
      "name": "Ivan McCarthy",
      "email": "ivan.mccarthy@usabilitydynamics.com",
      "url": "http://usabilitydynamics.com"
    }
  ],
  "dependencies": {
    "abstract": "*",
    "object-settings": "*"
  },
  "description": "Object Channel event emitter.",
  "devDependencies": {
    "Faker": "*",
    "mocha": "*",
    "should": "*"
  },
  "homepage": "https://github.com/UsabilityDynamics/object-emitter#readme",
  "keywords": [
    "activity",
    "emitter",
    "events",
    "harmony",
    "object",
    "observe",
    "viewmodel",
    "watch",
    "workflow"
  ],
  "name": "object-emitter",
  "optionalDependencies": {},
  "readme": "## Overview\n\nNote: This is a beta version. Some of the Stream-esque methods will not work as expected yet.\n\nBased on the EventEmitter2 library.\nNotable differences with EventEmitter2 library:\n\n  - Convenience \"mixin\" method for easily adding EventEmitter to any object.\n  - All module methods (on, emit, off, onAny, etc) are chainable.\n  - Wildcard matching enabled by default.\n  - Extends existing EventEmitters by working with the _events property.\n  - Recognizes Node.js domain usage.\n  - Allows default configuration to be applied to new instances.\n  - Allows default \"error\" callback to avoid throwing \"unspecified 'error' event\" error.\n  - Custom logger can be set for debugging.\n  - Emulates Stream functionality and allows event piping via the \"pipe\" method.\n\n## Basic Usage\nCreate new instance of Object Channels.\n\n    require( 'object-channels' )\n      .create({ delimiter: ':' })\n      .on( '*:two', console.log )\n      .emit( 'ping:one', 'I am ignored.' );  \n      .emit( 'ping:two', 'I am not ignored!' );  \n\nAdd Object Channels to a new object.\n\n    var MyObject = {};\n    \n    require( 'object-channels' ).mixin( MyObject );    \n    \n    MyObject\n      .on( 'ping', console.log )\n      .emit( 'ping', 'Chaining works!' );\n    \nExtend existing EventEmitter object and utilize wildcards.\n\n    require( 'object-channels' ).mixin( process );    \n    process.on( '*.ping', console.log );\n    process.emit( 'ding', 'I am ignored.' );\n    process.emit( 'ding.ping', 'I am not ignored!' );\n    \nPipe Request stream to the console.\n\n    app.get( '/pipe', function( req, res, next ) {\n      require( 'object-channels' ).mixin( req ).pipe( process.stdout );         \n      next();      \n    });\n\n## Advanced Usage\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Usability Dynamics, Inc. &lt;info@usabilitydynamics.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/UsabilityDynamics/object-emitter.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.0.2"
}
